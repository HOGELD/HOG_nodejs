     type User {
            _id: ID!
            email: String!
            password: String!
            firstname: String!
            lastname: String!
            phone: String!
            gender: String!
            image: String
            isAdmin: Boolean
            role: String
            team: String
            group: String
        }

        type Events {
            _id: ID!
            title: String!
            description: String!
            date: String!
            creator: User!
        }

        type MemberShip {
          _id: ID!
          status: String!
          date: String!
        }

        type Token {
            token: String!
            userId: ID!
            tokenExpiration: Int!
        }

        input UserInput {
            email: String!
            password: String
        }

        input EventInput {
           title: String!
           description: String!
           date: String!
       }

        type Query {
            login(email: String!, password: String!): Token!
            getUser(id: ID!): User!
            me: User!
            hello: String!
        }

        type Mutation {
            createUser(userInput: UserInput): User
        }